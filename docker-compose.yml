services:
  db:
    image: postgres:latest
    container_name: bank_db
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: kybartas
      POSTGRES_PASSWORD: kybartas
      POSTGRES_DB: bank_db
    networks:
      - app-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U kybartas -d bank_db" ]
      interval: 5s
      timeout: 5s
      retries: 5

  api:
    build: .  # Use Dockerfile
    container_name: bank_api
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/bank_db
      SPRING_DATASOURCE_USERNAME: kybartas
      SPRING_DATASOURCE_PASSWORD: kybartas
    networks:
      - app-network
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build: ./frontend
    container_name: frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8080
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - api
    stdin_open: true
    tty: true

networks:
  app-network:
    driver: bridge